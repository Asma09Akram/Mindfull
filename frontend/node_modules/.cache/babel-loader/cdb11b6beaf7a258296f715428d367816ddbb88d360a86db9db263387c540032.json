{"ast":null,"code":"var _jsxFileName = \"D:\\\\Asma Project\\\\Project_Mar2025\\\\Asma21March\\\\frontend\\\\src\\\\pages\\\\BreathingExercises.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport '../styles/BreathingExercises.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst breathingExercises = [{\n  name: \"Box Breathing\",\n  description: \"Inhale, hold, exhale, and hold, each for 4 counts\",\n  inhaleDuration: 4,\n  holdDuration: 4,\n  exhaleDuration: 4,\n  pauseDuration: 4\n}, {\n  name: \"4-7-8 Breathing\",\n  description: \"Inhale for 4, hold for 7, exhale for 8\",\n  inhaleDuration: 4,\n  holdDuration: 7,\n  exhaleDuration: 8,\n  pauseDuration: 0\n}, {\n  name: \"Deep Calm Breathing\",\n  description: \"Long inhale and exhale with natural pauses\",\n  inhaleDuration: 6,\n  holdDuration: 2,\n  exhaleDuration: 6,\n  pauseDuration: 2\n}];\nconst BreathingExercises = () => {\n  _s();\n  const [selectedExercise, setSelectedExercise] = useState(null);\n  const [isExercising, setIsExercising] = useState(false);\n  const [phase, setPhase] = useState('ready');\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    let timer;\n    if (isExercising && selectedExercise) {\n      timer = setInterval(() => {\n        if (phase === 'inhale' && counter >= selectedExercise.inhaleDuration) {\n          setPhase('hold');\n          setCounter(0);\n        } else if (phase === 'hold' && counter >= selectedExercise.holdDuration) {\n          setPhase('exhale');\n          setCounter(0);\n        } else if (phase === 'exhale' && counter >= selectedExercise.exhaleDuration) {\n          setPhase('pause');\n          setCounter(0);\n        } else if (phase === 'pause' && counter >= selectedExercise.pauseDuration) {\n          setPhase('inhale');\n          setCounter(0);\n        } else {\n          setCounter(prev => prev + 1);\n        }\n      }, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [isExercising, selectedExercise, phase, counter]);\n  const startExercise = exercise => {\n    setSelectedExercise(exercise);\n    setIsExercising(true);\n    setPhase('inhale');\n    setCounter(0);\n  };\n  const stopExercise = () => {\n    setIsExercising(false);\n    setPhase('ready');\n    setCounter(0);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"breathing-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-5 fade-in\",\n      children: \"Breathing Exercises\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), !isExercising ? /*#__PURE__*/_jsxDEV(Row, {\n      children: breathingExercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"h-100 exercise-card fade-in\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: exercise.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: exercise.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => startExercise(exercise),\n              className: \"w-100\",\n              children: \"Start Exercise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"exercise-active-card\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: selectedExercise.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"breathing-circle breathe-animation\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"phase-text\",\n                children: phase.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"counter\",\n                children: counter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: stopExercise,\n              className: \"mt-4\",\n              children: \"End Exercise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(BreathingExercises, \"omoWHUMdTf6yI+QQ5dDX3dcM76Y=\");\n_c = BreathingExercises;\nexport default BreathingExercises;\nvar _c;\n$RefreshReg$(_c, \"BreathingExercises\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Button","jsxDEV","_jsxDEV","breathingExercises","name","description","inhaleDuration","holdDuration","exhaleDuration","pauseDuration","BreathingExercises","_s","selectedExercise","setSelectedExercise","isExercising","setIsExercising","phase","setPhase","counter","setCounter","timer","setInterval","prev","clearInterval","startExercise","exercise","stopExercise","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","md","Body","Title","Text","variant","onClick","toUpperCase","_c","$RefreshReg$"],"sources":["D:/Asma Project/Project_Mar2025/Asma21March/frontend/src/pages/BreathingExercises.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport '../styles/BreathingExercises.css';\n\nconst breathingExercises = [\n  {\n    name: \"Box Breathing\",\n    description: \"Inhale, hold, exhale, and hold, each for 4 counts\",\n    inhaleDuration: 4,\n    holdDuration: 4,\n    exhaleDuration: 4,\n    pauseDuration: 4\n  },\n  {\n    name: \"4-7-8 Breathing\",\n    description: \"Inhale for 4, hold for 7, exhale for 8\",\n    inhaleDuration: 4,\n    holdDuration: 7,\n    exhaleDuration: 8,\n    pauseDuration: 0\n  },\n  {\n    name: \"Deep Calm Breathing\",\n    description: \"Long inhale and exhale with natural pauses\",\n    inhaleDuration: 6,\n    holdDuration: 2,\n    exhaleDuration: 6,\n    pauseDuration: 2\n  }\n];\n\nconst BreathingExercises = () => {\n  const [selectedExercise, setSelectedExercise] = useState(null);\n  const [isExercising, setIsExercising] = useState(false);\n  const [phase, setPhase] = useState('ready');\n  const [counter, setCounter] = useState(0);\n\n  useEffect(() => {\n    let timer;\n    if (isExercising && selectedExercise) {\n      timer = setInterval(() => {\n        if (phase === 'inhale' && counter >= selectedExercise.inhaleDuration) {\n          setPhase('hold');\n          setCounter(0);\n        } else if (phase === 'hold' && counter >= selectedExercise.holdDuration) {\n          setPhase('exhale');\n          setCounter(0);\n        } else if (phase === 'exhale' && counter >= selectedExercise.exhaleDuration) {\n          setPhase('pause');\n          setCounter(0);\n        } else if (phase === 'pause' && counter >= selectedExercise.pauseDuration) {\n          setPhase('inhale');\n          setCounter(0);\n        } else {\n          setCounter(prev => prev + 1);\n        }\n      }, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [isExercising, selectedExercise, phase, counter]);\n\n  const startExercise = (exercise) => {\n    setSelectedExercise(exercise);\n    setIsExercising(true);\n    setPhase('inhale');\n    setCounter(0);\n  };\n\n  const stopExercise = () => {\n    setIsExercising(false);\n    setPhase('ready');\n    setCounter(0);\n  };\n\n  return (\n    <Container className=\"breathing-page\">\n      <h1 className=\"text-center mb-5 fade-in\">Breathing Exercises</h1>\n\n      {!isExercising ? (\n        <Row>\n          {breathingExercises.map((exercise, index) => (\n            <Col md={4} key={index} className=\"mb-4\">\n              <Card className=\"h-100 exercise-card fade-in\">\n                <Card.Body>\n                  <Card.Title>{exercise.name}</Card.Title>\n                  <Card.Text>{exercise.description}</Card.Text>\n                  <Button \n                    variant=\"primary\" \n                    onClick={() => startExercise(exercise)}\n                    className=\"w-100\"\n                  >\n                    Start Exercise\n                  </Button>\n                </Card.Body>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      ) : (\n        <Row className=\"justify-content-center\">\n          <Col md={8}>\n            <Card className=\"exercise-active-card\">\n              <Card.Body className=\"text-center\">\n                <h2>{selectedExercise.name}</h2>\n                <div className=\"breathing-circle breathe-animation\">\n                  <div className=\"phase-text\">{phase.toUpperCase()}</div>\n                  <div className=\"counter\">{counter}</div>\n                </div>\n                <Button \n                  variant=\"secondary\" \n                  onClick={stopExercise}\n                  className=\"mt-4\"\n                >\n                  End Exercise\n                </Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n};\n\nexport default BreathingExercises;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}