{"ast":null,"code":"var _jsxFileName = \"D:\\\\Asma Project\\\\Project_Mar2025\\\\Asma21March\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n/*\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Verify token with backend\n      axios.get('/api/auth/verify', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n      .then(response => {\n        setCurrentUser(response.data.user);\n      })\n      .catch(() => {\n        localStorage.removeItem('token');\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const login = async (email, password) => {\n    const response = await axios.post('/api/auth/login', {\n      email,\n      password\n    });\n    const { token, user } = response.data;\n    localStorage.setItem('token', token);\n    setCurrentUser(user);\n    return user;\n  };\n\n  const register = async (email, password, name) => {\n    const response = await axios.post('/api/auth/register', {\n      email,\n      password,\n      name\n    });\n    const { token, user } = response.data;\n    localStorage.setItem('token', token);\n    setCurrentUser(user);\n    return user;\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setCurrentUser(null);\n  };\n\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n  */\n// const AuthContext = createContext(null);\n/*\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const navigate = useNavigate();\n\n  const login = async (email, password) => {\n    try {\n      // Add your login logic here\n      setCurrentUser({ email });\n      navigate('/dashboard');\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    setCurrentUser(null);\n    navigate('/login');\n  };\n\n  const value = {\n    currentUser,\n    login,\n    logout,\n    setCurrentUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const navigate = useNavigate();\n\n  const login = async (email, password) => {\n    try {\n      // Your login logic here\n      setCurrentUser({ email });\n      navigate('/dashboard');\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    setCurrentUser(null);\n    navigate('/login');\n  };\n\n  const value = {\n    currentUser,\n    login,\n    logout,\n    setCurrentUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n\n\n// src/routes.js\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Dashboard from './pages/Dashboard';\nimport Mindfulness from './pages/Mindfulness';\nimport BreathingExercises from './pages/BreathingExercises';\nimport Meditation from './pages/Meditation';\nimport Journaling from './pages/Journaling';\n\nexport const routes = [\n  {\n    path: \"/\",\n    element: <Home />\n  },\n  {\n    path: \"login\",\n    element: <Login />\n  },\n  {\n    path: \"register\",\n    element: <Register />\n  },\n  {\n    path: \"dashboard\",\n    element: <Dashboard />\n  },\n  {\n    path: \"mindfulness\",\n    element: <Mindfulness />\n  },\n  {\n    path: \"breathing\",\n    element: <BreathingExercises />\n  },\n  {\n    path: \"meditation\",\n    element: <Meditation />\n  },\n  {\n    path: \"journal\",\n    element: <Journaling />\n  }\n];\n*/\n\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const navigate = useNavigate();\n  const login = async (email, password) => {\n    try {\n      // Add your login logic here\n      setCurrentUser({\n        email\n      });\n      navigate('/dashboard');\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    setCurrentUser(null);\n    navigate('/login');\n  };\n  const value = {\n    currentUser,\n    login,\n    logout,\n    setCurrentUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"t9nAVuIKfuxK37/9+LGfo5lqFhk=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","currentUser","setCurrentUser","navigate","login","email","password","error","console","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Asma Project/Project_Mar2025/Asma21March/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst AuthContext = createContext();\n/*\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Verify token with backend\n      axios.get('/api/auth/verify', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n      .then(response => {\n        setCurrentUser(response.data.user);\n      })\n      .catch(() => {\n        localStorage.removeItem('token');\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const login = async (email, password) => {\n    const response = await axios.post('/api/auth/login', {\n      email,\n      password\n    });\n    const { token, user } = response.data;\n    localStorage.setItem('token', token);\n    setCurrentUser(user);\n    return user;\n  };\n\n  const register = async (email, password, name) => {\n    const response = await axios.post('/api/auth/register', {\n      email,\n      password,\n      name\n    });\n    const { token, user } = response.data;\n    localStorage.setItem('token', token);\n    setCurrentUser(user);\n    return user;\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setCurrentUser(null);\n  };\n\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n  */\n// const AuthContext = createContext(null);\n/*\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const navigate = useNavigate();\n\n  const login = async (email, password) => {\n    try {\n      // Add your login logic here\n      setCurrentUser({ email });\n      navigate('/dashboard');\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    setCurrentUser(null);\n    navigate('/login');\n  };\n\n  const value = {\n    currentUser,\n    login,\n    logout,\n    setCurrentUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const navigate = useNavigate();\n\n  const login = async (email, password) => {\n    try {\n      // Your login logic here\n      setCurrentUser({ email });\n      navigate('/dashboard');\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    setCurrentUser(null);\n    navigate('/login');\n  };\n\n  const value = {\n    currentUser,\n    login,\n    logout,\n    setCurrentUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n\n\n// src/routes.js\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Dashboard from './pages/Dashboard';\nimport Mindfulness from './pages/Mindfulness';\nimport BreathingExercises from './pages/BreathingExercises';\nimport Meditation from './pages/Meditation';\nimport Journaling from './pages/Journaling';\n\nexport const routes = [\n  {\n    path: \"/\",\n    element: <Home />\n  },\n  {\n    path: \"login\",\n    element: <Login />\n  },\n  {\n    path: \"register\",\n    element: <Register />\n  },\n  {\n    path: \"dashboard\",\n    element: <Dashboard />\n  },\n  {\n    path: \"mindfulness\",\n    element: <Mindfulness />\n  },\n  {\n    path: \"breathing\",\n    element: <BreathingExercises />\n  },\n  {\n    path: \"meditation\",\n    element: <Meditation />\n  },\n  {\n    path: \"journal\",\n    element: <Journaling />\n  }\n];\n*/\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const navigate = useNavigate();\n\n  const login = async (email, password) => {\n    try {\n      // Add your login logic here\n      setCurrentUser({ email });\n      navigate('/dashboard');\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    setCurrentUser(null);\n    navigate('/login');\n  };\n\n  const value = {\n    currentUser,\n    login,\n    logout,\n    setCurrentUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AACnvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMgB,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF;MACAJ,cAAc,CAAC;QAAEG;MAAM,CAAC,CAAC;MACzBF,QAAQ,CAAC,YAAY,CAAC;MACtB,OAAO,IAAI;IACb,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBP,cAAc,CAAC,IAAI,CAAC;IACpBC,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMO,KAAK,GAAG;IACZT,WAAW;IACXG,KAAK;IACLK,MAAM;IACNP;EACF,CAAC;EAED,oBACEV,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAX,QAAA,EAChCA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACf,GAAA,CAjCWF,YAAY;EAAA,QAENR,WAAW;AAAA;AAAA0B,EAAA,GAFjBlB,YAAY;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}