{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Container,Row,Col,Card,Button}from'react-bootstrap';import'../styles/BreathingExercises.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const breathingExercises=[{name:\"Box Breathing\",description:\"Inhale, hold, exhale, and hold, each for 4 counts\",inhaleDuration:4,holdDuration:4,exhaleDuration:4,pauseDuration:4},{name:\"4-7-8 Breathing\",description:\"Inhale for 4, hold for 7, exhale for 8\",inhaleDuration:4,holdDuration:7,exhaleDuration:8,pauseDuration:0},{name:\"Deep Calm Breathing\",description:\"Long inhale and exhale with natural pauses\",inhaleDuration:6,holdDuration:2,exhaleDuration:6,pauseDuration:2}];const BreathingExercises=()=>{const[selectedExercise,setSelectedExercise]=useState(null);const[isExercising,setIsExercising]=useState(false);const[phase,setPhase]=useState('ready');const[counter,setCounter]=useState(0);useEffect(()=>{let timer;if(isExercising&&selectedExercise){timer=setInterval(()=>{if(phase==='inhale'&&counter>=selectedExercise.inhaleDuration){setPhase('hold');setCounter(0);}else if(phase==='hold'&&counter>=selectedExercise.holdDuration){setPhase('exhale');setCounter(0);}else if(phase==='exhale'&&counter>=selectedExercise.exhaleDuration){setPhase('pause');setCounter(0);}else if(phase==='pause'&&counter>=selectedExercise.pauseDuration){setPhase('inhale');setCounter(0);}else{setCounter(prev=>prev+1);}},1000);}return()=>clearInterval(timer);},[isExercising,selectedExercise,phase,counter]);const startExercise=exercise=>{setSelectedExercise(exercise);setIsExercising(true);setPhase('inhale');setCounter(0);};const stopExercise=()=>{setIsExercising(false);setPhase('ready');setCounter(0);};return/*#__PURE__*/_jsxs(Container,{className:\"breathing-page\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center mb-5 fade-in\",children:\"Breathing Exercises\"}),!isExercising?/*#__PURE__*/_jsx(Row,{children:breathingExercises.map((exercise,index)=>/*#__PURE__*/_jsx(Col,{md:4,className:\"mb-4\",children:/*#__PURE__*/_jsx(Card,{className:\"h-100 exercise-card fade-in\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:exercise.name}),/*#__PURE__*/_jsx(Card.Text,{children:exercise.description}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:()=>startExercise(exercise),className:\"w-100\",children:\"Start Exercise\"})]})})},index))}):/*#__PURE__*/_jsx(Row,{className:\"justify-content-center\",children:/*#__PURE__*/_jsx(Col,{md:8,children:/*#__PURE__*/_jsx(Card,{className:\"exercise-active-card\",children:/*#__PURE__*/_jsxs(Card.Body,{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h2\",{children:selectedExercise.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"breathing-circle breathe-animation\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"phase-text\",children:phase.toUpperCase()}),/*#__PURE__*/_jsx(\"div\",{className:\"counter\",children:counter})]}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:stopExercise,className:\"mt-4\",children:\"End Exercise\"})]})})})})]});};export default BreathingExercises;","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Button","jsx","_jsx","jsxs","_jsxs","breathingExercises","name","description","inhaleDuration","holdDuration","exhaleDuration","pauseDuration","BreathingExercises","selectedExercise","setSelectedExercise","isExercising","setIsExercising","phase","setPhase","counter","setCounter","timer","setInterval","prev","clearInterval","startExercise","exercise","stopExercise","className","children","map","index","md","Body","Title","Text","variant","onClick","toUpperCase"],"sources":["D:/Asma Project/Project_Mar2025/Asma21March/frontend/src/pages/BreathingExercises.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport '../styles/BreathingExercises.css';\n\nconst breathingExercises = [\n  {\n    name: \"Box Breathing\",\n    description: \"Inhale, hold, exhale, and hold, each for 4 counts\",\n    inhaleDuration: 4,\n    holdDuration: 4,\n    exhaleDuration: 4,\n    pauseDuration: 4\n  },\n  {\n    name: \"4-7-8 Breathing\",\n    description: \"Inhale for 4, hold for 7, exhale for 8\",\n    inhaleDuration: 4,\n    holdDuration: 7,\n    exhaleDuration: 8,\n    pauseDuration: 0\n  },\n  {\n    name: \"Deep Calm Breathing\",\n    description: \"Long inhale and exhale with natural pauses\",\n    inhaleDuration: 6,\n    holdDuration: 2,\n    exhaleDuration: 6,\n    pauseDuration: 2\n  }\n];\n\nconst BreathingExercises = () => {\n  const [selectedExercise, setSelectedExercise] = useState(null);\n  const [isExercising, setIsExercising] = useState(false);\n  const [phase, setPhase] = useState('ready');\n  const [counter, setCounter] = useState(0);\n\n  useEffect(() => {\n    let timer;\n    if (isExercising && selectedExercise) {\n      timer = setInterval(() => {\n        if (phase === 'inhale' && counter >= selectedExercise.inhaleDuration) {\n          setPhase('hold');\n          setCounter(0);\n        } else if (phase === 'hold' && counter >= selectedExercise.holdDuration) {\n          setPhase('exhale');\n          setCounter(0);\n        } else if (phase === 'exhale' && counter >= selectedExercise.exhaleDuration) {\n          setPhase('pause');\n          setCounter(0);\n        } else if (phase === 'pause' && counter >= selectedExercise.pauseDuration) {\n          setPhase('inhale');\n          setCounter(0);\n        } else {\n          setCounter(prev => prev + 1);\n        }\n      }, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [isExercising, selectedExercise, phase, counter]);\n\n  const startExercise = (exercise) => {\n    setSelectedExercise(exercise);\n    setIsExercising(true);\n    setPhase('inhale');\n    setCounter(0);\n  };\n\n  const stopExercise = () => {\n    setIsExercising(false);\n    setPhase('ready');\n    setCounter(0);\n  };\n\n  return (\n    <Container className=\"breathing-page\">\n      <h1 className=\"text-center mb-5 fade-in\">Breathing Exercises</h1>\n\n      {!isExercising ? (\n        <Row>\n          {breathingExercises.map((exercise, index) => (\n            <Col md={4} key={index} className=\"mb-4\">\n              <Card className=\"h-100 exercise-card fade-in\">\n                <Card.Body>\n                  <Card.Title>{exercise.name}</Card.Title>\n                  <Card.Text>{exercise.description}</Card.Text>\n                  <Button \n                    variant=\"primary\" \n                    onClick={() => startExercise(exercise)}\n                    className=\"w-100\"\n                  >\n                    Start Exercise\n                  </Button>\n                </Card.Body>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      ) : (\n        <Row className=\"justify-content-center\">\n          <Col md={8}>\n            <Card className=\"exercise-active-card\">\n              <Card.Body className=\"text-center\">\n                <h2>{selectedExercise.name}</h2>\n                <div className=\"breathing-circle breathe-animation\">\n                  <div className=\"phase-text\">{phase.toUpperCase()}</div>\n                  <div className=\"counter\">{counter}</div>\n                </div>\n                <Button \n                  variant=\"secondary\" \n                  onClick={stopExercise}\n                  className=\"mt-4\"\n                >\n                  End Exercise\n                </Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n};\n\nexport default BreathingExercises;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}