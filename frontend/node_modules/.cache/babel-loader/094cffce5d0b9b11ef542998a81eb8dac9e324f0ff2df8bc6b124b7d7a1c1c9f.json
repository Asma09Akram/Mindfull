{"ast":null,"code":"var _jsxFileName = \"D:\\\\Asma Project\\\\Project_Mar2025\\\\Asma21March\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Create the AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\n\n// AuthProvider Component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Mock signup function (replace with actual API call)\n  const signup = async (email, password) => {\n    try {\n      // Simulate API call\n      const user = {\n        id: Date.now(),\n        email\n      }; // Replace with actual user data\n      setCurrentUser(user);\n      console.log('User signed up:', user);\n    } catch (error) {\n      console.error('Signup failed:', error);\n      throw error;\n    }\n  };\n\n  // Mock login function (replace with actual API call)\n  const login = async (email, password) => {\n    try {\n      // Simulate API call\n      const user = {\n        id: Date.now(),\n        email\n      }; // Replace with actual user data\n      setCurrentUser(user);\n      console.log('User logged in:', user);\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      setLoading(true);\n      // Clear any auth tokens from localStorage\n      localStorage.removeItem('token');\n      // Clear the current user\n      setCurrentUser(null);\n      // Navigate to login page\n      navigate('/login');\n    } catch (error) {\n      console.error('Logout error:', error);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Simulate fetching the current user on mount (replace with actual logic)\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        // Simulate fetching user data\n        const user = null; // Replace with actual user data if logged in\n        setCurrentUser(user);\n      } catch (error) {\n        console.error('Failed to fetch user:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUser();\n  }, []);\n\n  // Context value\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the AuthContext\n_s(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","signup","email","password","user","id","Date","now","console","log","error","login","logout","localStorage","removeItem","navigate","fetchUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/Asma Project/Project_Mar2025/Asma21March/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\n// Create the AuthContext\r\nconst AuthContext = createContext(null);\r\n\r\n// AuthProvider Component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Mock signup function (replace with actual API call)\r\n  const signup = async (email, password) => {\r\n    try {\r\n      // Simulate API call\r\n      const user = { id: Date.now(), email }; // Replace with actual user data\r\n      setCurrentUser(user);\r\n      console.log('User signed up:', user);\r\n    } catch (error) {\r\n      console.error('Signup failed:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Mock login function (replace with actual API call)\r\n  const login = async (email, password) => {\r\n    try {\r\n      // Simulate API call\r\n      const user = { id: Date.now(), email }; // Replace with actual user data\r\n      setCurrentUser(user);\r\n      console.log('User logged in:', user);\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      setLoading(true);\r\n      // Clear any auth tokens from localStorage\r\n      localStorage.removeItem('token');\r\n      // Clear the current user\r\n      setCurrentUser(null);\r\n      // Navigate to login page\r\n      navigate('/login');\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Simulate fetching the current user on mount (replace with actual logic)\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        // Simulate fetching user data\r\n        const user = null; // Replace with actual user data if logged in\r\n        setCurrentUser(user);\r\n      } catch (error) {\r\n        console.error('Failed to fetch user:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUser();\r\n  }, []);\r\n\r\n  // Context value\r\n  const value = {\r\n    currentUser,\r\n    signup,\r\n    login,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the AuthContext\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}